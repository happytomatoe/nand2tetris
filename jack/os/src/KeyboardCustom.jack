// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/KeyboardCustom.jack
/**
 * A library for handling user input from the keyboard.
 */
class KeyboardCustom {

    /** Initializes the keyboard. */
    function void init(){
        do OutputCustom.init();
        return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed(){
        return MemoryCustom.peek(24576);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar(){
        var char keyPressed;
        while (keyPressed = 0){
            do Sys.wait(10);
            let keyPressed = KeyboardCustom.keyPressed();
        }
        return keyPressed;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message){
        var char c;
        var String s;
        do OutputCustom.printString(message);
        let c = KeyboardCustom.keyPressed();
        while (~(c = String.newLine())){
            do OutputCustom.printChar(c);
            do s.appendChar(c);
            let c = KeyboardCustom.keyPressed();
        }
        return s;
    }

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message){
        var String s;
        let s = KeyboardCustom.readLine(message);
        return s.intValue();
    }
}
