class Main {
  function void main() {
    var int timestep, dinoY, x, dinoH, counter;
    var boolean collided, dead, startGameKeyPressed, obstaclesSpeed; 
    var Dino dino;
    var Cloud cloud;
    var BigCactus cactus;
    var Trail trail;
    var Pebbles pebbles;
    let timestep = 50;
    let dinoY= 150;

    let dead=true;
    
    do Output.moveCursor(11, 23);
    do Output.printString("Press Up to start");
    
    while(true){
      if(Main.upKeyPressed()){
        let dead=false;
        let obstaclesSpeed=5;
        let counter=0;
        let dino = Dino.new(50,dinoY,-13,1);
        let cloud = Cloud.new(390,20,1, 5);
        let cactus = BigCactus.new(1, 450,dinoY-3,obstaclesSpeed);
        let trail = Trail.new(0,180); 
        let dinoH = dino.getH();
        let pebbles = Pebbles.new(0,dinoY+dinoH-1, obstaclesSpeed); 
        do Screen.clearScreen();       
      }

      while (~dead) {
        do trail.update();
        do cactus.update();
        do dino.update();
        do cloud.update();
        do pebbles.update();
        let collided= Main.colided(dino,cactus);
        if(collided){
          let dead = true;
          do dino.die();
          do Output.moveCursor(11, 23);
          do Output.printString("Press Up to restart");

          do dino.dispose();
          do cloud.dispose();
          do cactus.dispose();
          do trail.dispose();
          do pebbles.dispose();

        }
        if(MathCustom.mod(counter,100)=0){
          let obstaclesSpeed=obstaclesSpeed+2;
          do cactus.setSpeed(obstaclesSpeed);
          do pebbles.setSpeed(obstaclesSpeed);
        }
        let counter = counter +1;
        do Sys.wait(timestep);
      }
      do Sys.wait(timestep);
    }
    return;
  }
  function boolean upKeyPressed(){
   var char key;
   let key = Keyboard.keyPressed();

   return key=131;
 }
 function boolean colided(Dino dino, BigCactus cactus){
    // collision x-axis?
    var int dinoX, dinoY, dinoW, dinoH;
    var int cactusX, cactusY, cactusW, cactusH;
    var boolean collisionX, cx1, cx2 , collisionY, cy1,cy2;
    let cactusX = cactus.getX();
    let cactusY = cactus.getY()+3;
    let cactusW = cactus.getW();
    let cactusH = cactus.getH()-3;
    

    let dinoX = dino.getX();
    let dinoY = dino.getY();
    let dinoW = dino.getW()-1;
    let dinoH = dino.getH()-1;
    

    let cx1 = LogicalExpression.gte(dinoX + dinoW, cactusX);

    let cx2 = LogicalExpression.gte(cactusX + cactusW , dinoX);
    let collisionX =  cx1 & cx2 ;
    // collision y-axis?
    let cy1 = LogicalExpression.gte(dinoY + dinoH , cactusY);
    let cy2 = LogicalExpression.gte(cactusY + cactusH , dinoY);
    let collisionY = cy1 &  cy2;
    return collisionX & collisionY;
  }
}
